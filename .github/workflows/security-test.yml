---
name: Snyk

on:
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  os-scan:
    name: Dependency Scan
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Snyk
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the Open Source issues to GitHub Code Scanning
        uses: snyk/actions/setup@cdb760004ba9ea4d525f2e043745dfe85bb9077e
        # Get python dependencies
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Pip Install Dependencies
        run: python -m pip install -r requirements.txt 

        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      - name: Test Dependencies
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.txt --command=python3 --sarif-file-output=snyk.sarif --org=jackseceng
      
        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
  code-scan:
    name: Code Scan
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Snyk
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@cdb760004ba9ea4d525f2e043745dfe85bb9077e
        # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
      - name: Test Code
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --sarif-file-output=snyk.sarif --org=jackseceng

        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif